@page "/fetchorder"
@using SalesOrderManager.Shared.Models;
@inject HttpClient Http;
@inject NavigationManager Navigator;
@inject IJSRuntime JsRuntime;

<h3>Orders</h3>

@if (Orders == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>State</th>
                <th>Details</th>
                <th>Delete</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var order in Orders)
            {
                <tr>
                    <td>@order.Name</td>
                    <td>@order.State</td>
                    <td>
                        <button @onclick='()=> Navigator.NavigateTo("/editorder/" + order.Id)' class="btn btn-outline-primary">Details</button>
                    </td>
                    <td>
                        <button @onclick='(()=> DeleteOrder(order.Id))' class="btn btn-outline-danger">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Order> Orders;

    protected override async Task OnInitializedAsync()
    {
        Orders = await Http.GetFromJsonAsync<List<Order>>("api/Order");
    }

    private async Task DeleteOrder(int orderId)
    {
        bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "All the windows and subelements associated with the order will be deleted. Are you sure?");
        if (confirmed)
        {
            await Http.DeleteAsync("api/Order/" + orderId);
            Navigator.NavigateTo("/fetchorder", true);
        }
    }
}
